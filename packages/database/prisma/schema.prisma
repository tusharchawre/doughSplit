generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String        @id @unique @default(cuid())
  username         String
  email            String        @unique
  password         String?
  phoneNumber      String?       @unique
  imageUrl         String?
  friends          User[]        @relation("UserFriends")
  friendsOf        User[]        @relation("UserFriends")
  group            Group[]
  paidTransactions Transaction[] @relation("PaidByUser")
  involvedIn       Transaction[] @relation("TransactionParticipants")
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  settlements      Settlement[]
  Share            Share[]
}

model Group {
  id               String        @id @unique @default(cuid())
  groupName        String
  groupDescription String
  members          User[]
  transactions     Transaction[]
}

model Transaction {
  id            Int               @id @unique @default(autoincrement())
  txnName       String
  description   String?
  date          DateTime          @default(now())
  group         Group             @relation(fields: [groupId], references: [id])
  groupId       String
  paidBy        User              @relation("PaidByUser", fields: [paidById], references: [id])
  paidById      String
  participants  User[]            @relation("TransactionParticipants")
  amount        Int
  currency      String            @default("INR")
  settledStatus TransactionStatus @default(PENDING)
  settlements   Settlement[]
  shares        Share[]
}

enum TransactionStatus {
  PENDING
  COMPLETED
}

model Settlement {
  id            String      @id @unique @default(cuid())
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transactionId Int
  paidBy        User        @relation(fields: [paidById], references: [id])
  paidById      String
  amount        Int
  settledAt     DateTime    @default(now())
}

model Share {
  id            String      @id @unique @default(cuid())
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transactionId Int
  user          User        @relation(fields: [userId], references: [id])
  userId        String
  amount        Int 
  isSettled     Boolean     @default(false)
  settledAt     DateTime? 

  @@unique([transactionId, userId]) 
}
