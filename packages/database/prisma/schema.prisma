generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String        @id @default(cuid())
  username         String
  email            String        @unique
  password         String?
  phoneNumber      String?       @unique
  imageUrl         String?
  friends          User[]        @relation("UserFriends")
  friendsOf        User[]        @relation("UserFriends")
  group            Group[]
  paidTransactions Transaction[] @relation("PaidByUser")
  involvedIn       Transaction[] @relation("TransactionParticipants")
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  settlements      Settlement[]
}

model Group {
  id               String        @id @default(cuid())
  groupName        String
  groupDescription String
  members          User[]
  transactions     Transaction[]
}

model Transaction {
  id              Int               @id @default(autoincrement())
  description     String
  date            DateTime          @default(now())
  group           Group             @relation(fields: [groupId], references: [id])
  groupId         String
  paidBy          User              @relation("PaidByUser", fields: [paidById], references: [id])
  paidById        String
  participants    User[]            @relation("TransactionParticipants")
  amount          Int
  currency        String            @default("USD")
  settledStatus   TransactionStatus @default(PENDING)
  settlements     Settlement[]
}

enum TransactionStatus {
  PENDING
  COMPLETED
}

model Settlement {
  id            String      @id @default(cuid())
  transaction   Transaction @relation(fields: [transactionId], references: [id])
  transactionId Int
  paidBy        User        @relation(fields: [paidById], references: [id])
  paidById      String
  amount        Int
  settledAt     DateTime    @default(now())
}

